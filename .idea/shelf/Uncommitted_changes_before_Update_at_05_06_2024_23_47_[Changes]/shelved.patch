Index: Untitled-1.ipynb
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n \"cells\": [\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"metadata\": {},\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"print('BAHI')\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"metadata\": {},\r\n   \"outputs\": [],\r\n   \"source\": [\r\n    \"import random\\n\",\r\n    \"\\n\",\r\n    \"def print_board(board):\\n\",\r\n    \"    for r in range(3):\\n\",\r\n    \"        print(\\\"  \\\" + board[r][0] + \\\" | \\\" + board[r][1] + \\\" | \\\" + board[r][2])\\n\",\r\n    \"        if (r != 2):\\n\",\r\n    \"            print(\\\"---|---|---\\\")\\n\",\r\n    \"\\n\",\r\n    \"def is_winner(board, player):\\n\",\r\n    \"    # 가로, 세로, 대각선 확인\\n\",\r\n    \"    for i in range(3):\\n\",\r\n    \"        if board[i][0] == board[i][1] == board[i][2] == player:\\n\",\r\n    \"            return True\\n\",\r\n    \"        if board[0][i] == board[1][i] == board[2][i] == player:\\n\",\r\n    \"            return True\\n\",\r\n    \"    if board[0][0] == board[1][1] == board[2][2] == player:\\n\",\r\n    \"        return True\\n\",\r\n    \"    if board[0][2] == board[1][1] == board[2][0] == player:\\n\",\r\n    \"        return True\\n\",\r\n    \"    return False\\n\",\r\n    \"\\n\",\r\n    \"def is_board_full(board):\\n\",\r\n    \"    for row in board:\\n\",\r\n    \"        for cell in row:\\n\",\r\n    \"            if cell == \\\" \\\":\\n\",\r\n    \"                return False\\n\",\r\n    \"    return True\\n\",\r\n    \"\\n\",\r\n    \"def main():\\n\",\r\n    \"    board = [[' ' for x in range(3)] for y in range(3)]\\n\",\r\n    \"    print(\\\"Welcome to Tic-Tac-Toe!\\\")\\n\",\r\n    \"    print_board(board)\\n\",\r\n    \"\\n\",\r\n    \"    while True:\\n\",\r\n    \"        # 사용자의 입력 받기\\n\",\r\n    \"        x = int(input(\\\"다음 수의 X좌표를 입력하시오: \\\"))\\n\",\r\n    \"        y = int(input(\\\"다음 수의 Y좌표를 입력하시오: \\\"))\\n\",\r\n    \"\\n\",\r\n    \"        # 사용자가 빈 곳에 X 표시하기\\n\",\r\n    \"        if board[x][y] != ' ':\\n\",\r\n    \"            print(\\\"이미 선택된 위치입니다. \\\")\\n\",\r\n    \"            continue\\n\",\r\n    \"        else:\\n\",\r\n    \"            board[x][y] = 'X'\\n\",\r\n    \"\\n\",\r\n    \"        # 게임 종료 조건 확인\\n\",\r\n    \"        if is_winner(board, 'X'):\\n\",\r\n    \"            print_board(board)\\n\",\r\n    \"            print(\\\"축하합니다! 당신이 이겼습니다!\\\")\\n\",\r\n    \"            break\\n\",\r\n    \"        elif is_board_full(board):\\n\",\r\n    \"            print_board(board)\\n\",\r\n    \"            print(\\\"비겼습니다!\\\")\\n\",\r\n    \"            break\\n\",\r\n    \"\\n\",\r\n    \"        # 컴퓨터가 무작위 위치에 O 표시하기\\n\",\r\n    \"        while True:\\n\",\r\n    \"            comp_x = random.randint(0, 2)\\n\",\r\n    \"            comp_y = random.randint(0, 2)\\n\",\r\n    \"            if board[comp_x][comp_y] == ' ':\\n\",\r\n    \"                board[comp_x][comp_y] = 'O'\\n\",\r\n    \"                break\\n\",\r\n    \"\\n\",\r\n    \"        # 게임 종료 조건 확인\\n\",\r\n    \"        if is_winner(board, 'O'):\\n\",\r\n    \"            print_board(board)\\n\",\r\n    \"            print(\\\"안타깝지만, 컴퓨터가 이겼습니다!\\\")\\n\",\r\n    \"            break\\n\",\r\n    \"        elif is_board_full(board):\\n\",\r\n    \"            print_board(board)\\n\",\r\n    \"            print(\\\"비겼습니다!\\\")\\n\",\r\n    \"            break\\n\",\r\n    \"\\n\",\r\n    \"        print_board(board)\\n\",\r\n    \"\\n\",\r\n    \"if __name__ == \\\"__main__\\\":\\n\",\r\n    \"    main()\\n\"\r\n   ]\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"metadata\": {},\r\n   \"outputs\": [],\r\n   \"source\": []\r\n  },\r\n  {\r\n   \"cell_type\": \"code\",\r\n   \"execution_count\": null,\r\n   \"metadata\": {},\r\n   \"outputs\": [],\r\n   \"source\": []\r\n  }\r\n ],\r\n \"metadata\": {\r\n  \"kernelspec\": {\r\n   \"display_name\": \"Python 3\",\r\n   \"language\": \"python\",\r\n   \"name\": \"python3\"\r\n  },\r\n  \"language_info\": {\r\n   \"name\": \"python\",\r\n   \"version\": \"3.12.3\"\r\n  }\r\n },\r\n \"nbformat\": 4,\r\n \"nbformat_minor\": 2\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Untitled-1.ipynb b/Untitled-1.ipynb
--- a/Untitled-1.ipynb	(revision e1ec41598bf139d4aa2fb2a232e6345646546b6a)
+++ b/Untitled-1.ipynb	(date 1717598239860)
@@ -3,7 +3,9 @@
   {
    "cell_type": "code",
    "execution_count": null,
-   "metadata": {},
+   "metadata": {
+    "is_executing": true
+   },
    "outputs": [],
    "source": [
     "print('BAHI')"
Index: Habibi.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Habibi.txt b/Habibi.txt
new file mode 100644
--- /dev/null	(date 1717598381608)
+++ b/Habibi.txt	(date 1717598381608)
@@ -0,0 +1,1 @@
+BRRRRRRIIIINNNGGGG
